

 NAS Parallel Benchmarks (NPB3.1-MZ-MPI) - LU-MZ MPI+OpenMP Benchmark

 Number of zones:  4  x   4
 Iterations: 250    dt:   2.000000
 Number of active processes:    9

 Use the default load factors with threads
  proc    0  num_threads =   4  group =   0
  proc    1  num_threads =   4  group =   0
  proc    2  num_threads =   4  group =   0
  proc    3  num_threads =   4  group =   0
  proc    4  num_threads =   4  group =   0
  proc    5  num_threads =   4  group =   0
  proc    6  num_threads =   4  group =   0
  proc    7  num_threads =   4  group =   0
  proc    8  num_threads =   4  group =   0
 Total number of threads:     36

 Zone sizes:
   1:    120 x   80 x   28
   2:    120 x   80 x   28
   3:    120 x   80 x   28
   4:    120 x   80 x   28
   5:    120 x   80 x   28
   6:    120 x   80 x   28
   7:    120 x   80 x   28
   8:    120 x   80 x   28
   9:    120 x   80 x   28
  10:    120 x   80 x   28
  11:    120 x   80 x   28
  12:    120 x   80 x   28
  13:    120 x   80 x   28
  14:    120 x   80 x   28
  15:    120 x   80 x   28
  16:    120 x   80 x   28
 Zone-process mapping:
 proc nzones zone_size nthreads size_per_thread
   0      2     537600      5       107520
   zone    1    268800
   zone   13    268800
   1      2     537600      5       107520
   zone    2    268800
   zone   14    268800
   2      2     537600      5       107520
   zone    3    268800
   zone   15    268800
   3      2     537600      5       107520
   zone    4    268800
   zone   16    268800
   4      2     537600      4       134400
   zone    5    268800
   zone   10    268800
   5      2     537600      4       134400
   zone    6    268800
   zone   11    268800
   6      2     537600      4       134400
   zone    7    268800
   zone   12    268800
   7      1     268800      2       134400
   zone    8    268800
   8      1     268800      2       134400
   zone    9    268800

 Calculated speedup =    32.00

 Time step    1
 Time step   20
 Time step   40
 Time step   60
 Time step   80
 Time step  100
 Time step  120
 Time step  140
 Time step  160
 Time step  180
 Time step  200
 Time step  220
 Time step  240
 Time step  250

 Verification being performed for class C
 Accuracy setting for epsilon =  0.1000000000000E-07
 Comparison of RMS-norms of residual
           1   0.4108743427233E+05 0.4108743427233E+05 0.9792786120386E-13
           2   0.3439004802235E+04 0.3439004802235E+04 0.8343855124101E-13
           3   0.9961331392486E+04 0.9961331392486E+04 0.3177327846514E-13
           4   0.8321426758084E+04 0.8321426758084E+04 0.2426360642992E-13
           5   0.7463792419218E+05 0.7463792419218E+05 0.1910674376083E-13
 Comparison of RMS-norms of solution error
           1   0.3429276307955E+04 0.3429276307955E+04 0.1405638241577E-12
           2   0.2336680861825E+03 0.2336680861825E+03 0.7833153928810E-13
           3   0.8216363109621E+03 0.8216363109621E+03 0.1203787460440E-13
           4   0.7143809828225E+03 0.7143809828225E+03 0.1289036813252E-13
           5   0.7057470798773E+04 0.7057470798773E+04 0.3273292385290E-13
 Comparison of surface integral
               0.1125826349653E+05 0.1125826349653E+05 0.1761105032296E-12
 Verification Successful


 LU-MZ Benchmark Completed.
 Class           =                        C
 Size            =             480x 320x 28
 Iterations      =                      250
 Time in seconds =                   419.16
 Total processes =                        9
 Total threads   =                       36
 Mop/s total     =                  4581.76
 Mop/s/thread    =                   127.27
 Operation type  =           floating point
 Verification    =               SUCCESSFUL
 Version         =                      3.1
 Compile date    =              04 Mar 2012

 Compile options:
    F77          = mpif77
    FLINK        = $(F77)
    F_LIB        = -L/usr/local/lib -lmpi 
    F_INC        = -I/usr/local/include
    FFLAGS       = -O3 -fopenmp -mcmodel=medium
    FLINKFLAGS   = -O3 -fopenmp -mcmodel=medium
    RAND         = (none)


 Please send all errors/feedbacks to:

 NPB Development Team
 npb@nas.nasa.gov


